{"ast":null,"code":"import _slicedToArray from\"/Users/seong-eunkim/Desktop/st21-terraViz/terraviz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import mapboxgl from\"!mapbox-gl\";// eslint-disable-line import/no-webpack-loader-syntax\nimport\"./Map.css\";// Insert your access token here\nimport{jsx as _jsx}from\"react/jsx-runtime\";mapboxgl.accessToken=process.env.REACT_APP_API_KEY;var Map=function Map(){var mapContainer=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),map=_useState2[0],setMap=_useState2[1];useEffect(function(){// Prevent the map from rerendering every single time\nif(map!==null){return;}// Initialize base map with basic settings, render it into mapContainer\nvar defaultMap=new mapboxgl.Map({container:mapContainer.current,style:\"mapbox://styles/terraviz/ckpmos6qm1n9t17m4a1r2j3tj\",center:[17,30],zoom:1});//Fetch .json file and load the data as circle layer\ndefaultMap.on(\"load\",function(){fetch(\"TestSet.json\").then(function(res){return res.json();}).then(function(data){defaultMap.addSource(\"point\",{type:\"geojson\",data:data});defaultMap.addLayer({id:\"circles\",source:\"point\",type:\"circle\",paint:{\"circle-color\":\"#E86A62\",\"circle-stroke-color\":\"pink\",\"circle-opacity\":0.8,\"circle-radius\":17,\"circle-stroke-width\":2},layout:{}});}).catch(function(err){return console.error(err);});});setMap(defaultMap);},[map]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{ref:mapContainer,className:\"map-container\"})});};export default Map;","map":{"version":3,"sources":["/Users/seong-eunkim/Desktop/st21-terraViz/terraviz/src/components/Map.js"],"names":["React","useState","useRef","useEffect","mapboxgl","accessToken","process","env","REACT_APP_API_KEY","Map","mapContainer","map","setMap","defaultMap","container","current","style","center","zoom","on","fetch","then","res","json","data","addSource","type","addLayer","id","source","paint","layout","catch","err","console","error"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAAmC;AACnC,MAAO,WAAP,CAEA;2CACAA,QAAQ,CAACC,WAAT,CAAuBC,OAAO,CAACC,GAAR,CAAYC,iBAAnC,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAMC,CAAAA,YAAY,CAAGR,MAAM,CAAC,IAAD,CAA3B,CACA,cAAsBD,QAAQ,CAAC,IAAD,CAA9B,wCAAOU,GAAP,eAAYC,MAAZ,eAEAT,SAAS,CAAC,UAAM,CACd;AACA,GAAIQ,GAAG,GAAK,IAAZ,CAAkB,CAChB,OACD,CAED;AACA,GAAME,CAAAA,UAAU,CAAG,GAAIT,CAAAA,QAAQ,CAACK,GAAb,CAAiB,CAClCK,SAAS,CAAEJ,YAAY,CAACK,OADU,CAElCC,KAAK,CAAE,oDAF2B,CAGlCC,MAAM,CAAE,CAAC,EAAD,CAAK,EAAL,CAH0B,CAIlCC,IAAI,CAAE,CAJ4B,CAAjB,CAAnB,CAOA;AACAL,UAAU,CAACM,EAAX,CAAc,MAAd,CAAsB,UAAY,CAChCC,KAAK,CAAC,cAAD,CAAL,CACGC,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACdX,UAAU,CAACY,SAAX,CAAqB,OAArB,CAA8B,CAC5BC,IAAI,CAAE,SADsB,CAE5BF,IAAI,CAAEA,IAFsB,CAA9B,EAIAX,UAAU,CAACc,QAAX,CAAoB,CAClBC,EAAE,CAAE,SADc,CAElBC,MAAM,CAAE,OAFU,CAGlBH,IAAI,CAAE,QAHY,CAIlBI,KAAK,CAAE,CACL,eAAgB,SADX,CAEL,sBAAuB,MAFlB,CAGL,iBAAkB,GAHb,CAIL,gBAAiB,EAJZ,CAKL,sBAAuB,CALlB,CAJW,CAWlBC,MAAM,CAAE,EAXU,CAApB,EAaD,CApBH,EAqBGC,KArBH,CAqBS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAT,EArBT,EAsBD,CAvBD,EAyBArB,MAAM,CAACC,UAAD,CAAN,CACD,CAzCQ,CAyCN,CAACF,GAAD,CAzCM,CAAT,CA2CA,mBACE,kCACE,YAAK,GAAG,CAAED,YAAV,CAAwB,SAAS,CAAC,eAAlC,EADF,EADF,CAKD,CApDD,CAsDA,cAAeD,CAAAA,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"./Map.css\";\n\n// Insert your access token here\nmapboxgl.accessToken = process.env.REACT_APP_API_KEY;\n\nconst Map = () => {\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    // Prevent the map from rerendering every single time\n    if (map !== null) {\n      return;\n    }\n\n    // Initialize base map with basic settings, render it into mapContainer\n    const defaultMap = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/terraviz/ckpmos6qm1n9t17m4a1r2j3tj\",\n      center: [17, 30],\n      zoom: 1,\n    });\n\n    //Fetch .json file and load the data as circle layer\n    defaultMap.on(\"load\", function () {\n      fetch(\"TestSet.json\")\n        .then((res) => res.json())\n        .then((data) => {\n          defaultMap.addSource(\"point\", {\n            type: \"geojson\",\n            data: data,\n          });\n          defaultMap.addLayer({\n            id: \"circles\",\n            source: \"point\",\n            type: \"circle\",\n            paint: {\n              \"circle-color\": \"#E86A62\",\n              \"circle-stroke-color\": \"pink\",\n              \"circle-opacity\": 0.8,\n              \"circle-radius\": 17,\n              \"circle-stroke-width\": 2,\n            },\n            layout: {},\n          });\n        })\n        .catch((err) => console.error(err));\n    });\n\n    setMap(defaultMap);\n  }, [map]);\n\n  return (\n    <div>\n      <div ref={mapContainer} className=\"map-container\"></div>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}