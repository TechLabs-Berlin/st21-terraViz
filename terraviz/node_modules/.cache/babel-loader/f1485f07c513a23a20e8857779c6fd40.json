{"ast":null,"code":"var _jsxFileName = \"/Users/seong-eunkim/Desktop/st21-terraViz/terraviz/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport \"./Map.css\";\nimport Sidebar from \"./Sidebar\";\nimport \"./Sidebar.css\"; // Insert your access token here\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = process.env.REACT_APP_API_KEY;\n\nconst Map = () => {\n  _s();\n\n  const mapContainer = useRef(null);\n  const [sidebar, setSidebar] = useState(false); // const [map, setMap] = useState(null);\n\n  const onToggleSidebar = () => setSidebar(!sidebar);\n\n  const [data, setData] = useState([]);\n\n  const getData = () => {\n    fetch('mock.json', {\n      headers: {\n        'Content-type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (res) {\n      console.log(res);\n      return res.json();\n    }).then(function (myJson) {\n      console.log(myJson);\n      setData(myJson);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // useEffect(() => {\n  //   // Prevent the map from rerendering every single time\n  //   if (map !== null) {\n  //     return;\n  //   }\n  //   // Initialize base map with basic settings, render it into mapContainer\n  //   setMap(defaultMap);\n  // }, [map]);\n\n  const map = new mapboxgl.Map({\n    container: mapContainer.current,\n    style: \"mapbox://styles/mapbox/light-v10\",\n    center: [17, 30],\n    zoom: 1\n  });\n  map.on('load', function () {\n    map.addSource('point', {\n      type: 'geojson',\n      data: data\n    });\n  }); // Making our map responsive to toggling the sidebar\n\n  useEffect(() => {\n    if (map !== null) {\n      map.resize();\n    }\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onToggleSidebar: onToggleSidebar,\n      sidebar: sidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"S3MYbnDLr4iFqfaYV+gRcetNqUA=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/seong-eunkim/Desktop/st21-terraViz/terraviz/src/components/Map.js"],"names":["React","useState","useRef","useEffect","mapboxgl","Sidebar","accessToken","process","env","REACT_APP_API_KEY","Map","mapContainer","sidebar","setSidebar","onToggleSidebar","data","setData","getData","fetch","headers","then","res","console","log","json","myJson","map","container","current","style","center","zoom","on","addSource","type","resize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;AACnC,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,eAAP,C,CAGA;;;AACAD,QAAQ,CAACE,WAAT,GAAuBC,OAAO,CAACC,GAAR,CAAYC,iBAAnC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,YAAY,GAAGT,MAAM,CAAC,IAAD,CAA3B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC,CAFgB,CAGhB;;AACA,QAAMa,eAAe,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAAxC;;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMgB,OAAO,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,WAAD,EACL;AACEC,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAW;AAFH;AADZ,KADK,CAAL,CAQCC,IARD,CAQM,UAASC,GAAT,EAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAG,CAACG,IAAJ,EAAP;AACD,KAXD,EAYCJ,IAZD,CAYM,UAASK,MAAT,EAAiB;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAT,MAAAA,OAAO,CAACS,MAAD,CAAP;AACD,KAfD;AAgBD,GAjBD;;AAkBAtB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT,CAzBgB,CAgChB;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA,QAAMS,GAAG,GAAG,IAAItB,QAAQ,CAACM,GAAb,CAAiB;AAC3BiB,IAAAA,SAAS,EAAEhB,YAAY,CAACiB,OADG;AAE3BC,IAAAA,KAAK,EAAE,kCAFoB;AAG3BC,IAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAHmB;AAI3BC,IAAAA,IAAI,EAAE;AAJqB,GAAjB,CAAZ;AAOAL,EAAAA,GAAG,CAACM,EAAJ,CAAO,MAAP,EAAe,YAAW;AACxBN,IAAAA,GAAG,CAACO,SAAJ,CAAc,OAAd,EAAuB;AACrBC,MAAAA,IAAI,EAAG,SADc;AAErBnB,MAAAA,IAAI,EAAEA;AAFe,KAAvB;AAID,GALD,EAlDgB,CAwDhB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,GAAG,KAAK,IAAZ,EAAkB;AAChBA,MAAAA,GAAG,CAACS,MAAJ;AACD;AACF,GAJQ,EAIN,CAACT,GAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEZ,eAA1B;AAA2C,MAAA,OAAO,EAAEF;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAED,YAAV;AAAwB,MAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArED;;GAAMD,G;;KAAAA,G;AAuEN,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"./Map.css\";\nimport Sidebar from \"./Sidebar\";\nimport \"./Sidebar.css\";\n\n\n// Insert your access token here\nmapboxgl.accessToken = process.env.REACT_APP_API_KEY;\n\nconst Map = () => {\n  const mapContainer = useRef(null);\n  const [sidebar, setSidebar] = useState(false);\n  // const [map, setMap] = useState(null);\n  const onToggleSidebar = () => setSidebar(!sidebar);\n  const [data, setData] = useState([]);\n\n  const getData = () => {\n    fetch('mock.json',\n    {\n      headers : {\n        'Content-type': 'application/json',\n        'Accept' : 'application/json'\n      }\n    }\n    )\n    .then(function(res) {\n      console.log(res)\n      return res.json();\n    })\n    .then(function(myJson) {\n      console.log(myJson);\n      setData(myJson)\n    });\n  }\n  useEffect(() => {\n    getData()\n  }, [])\n\n  \n\n\n  // useEffect(() => {\n  //   // Prevent the map from rerendering every single time\n  //   if (map !== null) {\n  //     return;\n  //   }\n\n  //   // Initialize base map with basic settings, render it into mapContainer\n    \n  //   setMap(defaultMap);\n  // }, [map]);\n\n  const map = new mapboxgl.Map({\n    container: mapContainer.current,\n    style: \"mapbox://styles/mapbox/light-v10\",\n    center: [17, 30],\n    zoom: 1,\n  });\n\n  map.on('load', function() {\n    map.addSource('point', {\n      type : 'geojson',\n      data: data\n    })\n  });\n  // Making our map responsive to toggling the sidebar\n  useEffect(() => {\n    if (map !== null) {\n      map.resize();\n    }\n  }, [map]);\n\n  return (\n    <div className=\"wrapper\">\n      <Sidebar onToggleSidebar={onToggleSidebar} sidebar={sidebar} />\n      <div ref={mapContainer} className=\"map-container\"></div>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}